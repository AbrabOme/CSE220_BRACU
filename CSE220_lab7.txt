#task 1
class KeyIndex:
    def __init__(self,arr):
        self.pos = 0
        max = arr[0]
        for i in range(1,len(arr)):
            if arr[i] > max:
                max = arr[i]

        min = arr[0]
        for i in range(1,len(arr)):
            if arr[i] < min:
                min = arr[i]
        
        if min < 0:
            self.pos = -1*min
        
        self.auxi = [0]*(self.pos+max+1)

        for i in arr:
            self.auxi[i+self.pos]+=1


    def search(self,num):

        if num+self.pos >= len(self.auxi):
            return False
        else:
            return self.auxi[num+self.pos] != 0

    def sort (self):
        lis = []
        for i in range(len(self.auxi)):
            for j in range(self.auxi[i]):
                lis += [i-self.pos]
        return lis
h1 = KeyIndex([-1,-2,1,3,4,-6])
print(h1.search(6))
print(h1.sort())


#Task2
class Hashing:
    def __init__(self,arr):
        self.hash = [None]*9
        for i in arr:
            self.add(i)
        print(self.hash)
        
        

    def add(self,num):
            idx = self.getidx(num)
            while self.hash[idx] is not None:
                idx = (idx+1)%9
            self.hash[idx] = num

    def getidx(self,stri):
            cons_count = 0
            final_count = 0

            for i in stri:
                if "A" <= i <= "Z":
                    if i not in "AEIOU":
                        cons_count += 1
                elif "0" <= i <= "9":
                    final_count += int(i)
            final_count += cons_count*24
            return final_count%9

Hashing(["ATY1234","AIKF123","BKFJ1231"])
A=9